{"ast":null,"code":"import{swap}from\"../Algorithms/swap\";// getting the merge sort animation\nexport function getMergeSortAnimation(array){var animations=[];var auxiliaryArray=array.slice();mergeSort(auxiliaryArray,0,array.length-1,animations);return animations;}function mergeSort(array,startIdx,endIdx,animations){if(startIdx===endIdx)return;var middleIdx=Math.floor((startIdx+endIdx)/2);mergeSort(array,startIdx,middleIdx,animations);mergeSort(array,middleIdx+1,endIdx,animations);merge(animations,array,startIdx,endIdx);}function merge(animations,array,left,right){if(left===right)return;for(var i=left;i<right+1;i++){var indexOfMin=findMin(array,i,right);// swaping the i with the current min\nswap(array,i,indexOfMin);// pushing animation\nanimations.push([indexOfMin,i]);}return array;}// function to find the min in a current array\nfunction findMin(array,left,right){var min=600;var indexOfMin=0;for(var i=left;i<right+1;i++){if(array[i]<min){min=array[i];indexOfMin=i;}}return indexOfMin;}","map":{"version":3,"sources":["/Users/saraspagnoletto/sort/src/Main/Algorithms/mergeSort.js"],"names":["swap","getMergeSortAnimation","array","animations","auxiliaryArray","slice","mergeSort","length","startIdx","endIdx","middleIdx","Math","floor","merge","left","right","i","indexOfMin","findMin","push","min"],"mappings":"AAAA,OAASA,IAAT,KAAqB,oBAArB,CAEA;AACA,MAAO,SAASC,CAAAA,qBAAT,CAA+BC,KAA/B,CAAsC,CAC3C,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CACA,GAAMC,CAAAA,cAAc,CAAGF,KAAK,CAACG,KAAN,EAAvB,CACAC,SAAS,CAACF,cAAD,CAAiB,CAAjB,CAAoBF,KAAK,CAACK,MAAN,CAAe,CAAnC,CAAsCJ,UAAtC,CAAT,CACA,MAAOA,CAAAA,UAAP,CACD,CAED,QAASG,CAAAA,SAAT,CAAmBJ,KAAnB,CAAyBM,QAAzB,CAAkCC,MAAlC,CAAyCN,UAAzC,CAAqD,CACnD,GAAIK,QAAQ,GAAKC,MAAjB,CAAyB,OACzB,GAAMC,CAAAA,SAAS,CAAGC,IAAI,CAACC,KAAL,CAAW,CAACJ,QAAQ,CAAGC,MAAZ,EAAsB,CAAjC,CAAlB,CACAH,SAAS,CAACJ,KAAD,CAAQM,QAAR,CAAkBE,SAAlB,CAA6BP,UAA7B,CAAT,CACAG,SAAS,CAACJ,KAAD,CAAQQ,SAAS,CAAG,CAApB,CAAuBD,MAAvB,CAA+BN,UAA/B,CAAT,CACAU,KAAK,CAACV,UAAD,CAAaD,KAAb,CAAoBM,QAApB,CAA8BC,MAA9B,CAAL,CACD,CAED,QAASI,CAAAA,KAAT,CAAeV,UAAf,CAA2BD,KAA3B,CAAkCY,IAAlC,CAAwCC,KAAxC,CAA8C,CAC5C,GAAID,IAAI,GAAGC,KAAX,CAAkB,OAClB,IAAK,GAAIC,CAAAA,CAAC,CAACF,IAAX,CAAiBE,CAAC,CAACD,KAAK,CAAC,CAAzB,CAA4BC,CAAC,EAA7B,CAAiC,CAC/B,GAAIC,CAAAA,UAAU,CAAGC,OAAO,CAAChB,KAAD,CAAQc,CAAR,CAAWD,KAAX,CAAxB,CACA;AACAf,IAAI,CAACE,KAAD,CAAOc,CAAP,CAAUC,UAAV,CAAJ,CACA;AACAd,UAAU,CAACgB,IAAX,CAAgB,CAACF,UAAD,CAAYD,CAAZ,CAAhB,EACD,CACD,MAAOd,CAAAA,KAAP,CACD,CAED;AACA,QAASgB,CAAAA,OAAT,CAAiBhB,KAAjB,CAAuBY,IAAvB,CAA4BC,KAA5B,CAAmC,CACjC,GAAIK,CAAAA,GAAG,CAAG,GAAV,CACA,GAAIH,CAAAA,UAAU,CAAG,CAAjB,CACA,IAAK,GAAID,CAAAA,CAAC,CAAGF,IAAb,CAAmBE,CAAC,CAACD,KAAK,CAAC,CAA3B,CAA8BC,CAAC,EAA/B,CAAmC,CACjC,GAAId,KAAK,CAACc,CAAD,CAAL,CAAWI,GAAf,CAAoB,CAClBA,GAAG,CAAGlB,KAAK,CAACc,CAAD,CAAX,CACAC,UAAU,CAAGD,CAAb,CACD,CACF,CACD,MAAOC,CAAAA,UAAP,CACD","sourcesContent":["import { swap } from \"../Algorithms/swap\";\n\n// getting the merge sort animation\nexport function getMergeSortAnimation(array) {\n  const animations = [];\n  const auxiliaryArray = array.slice();\n  mergeSort(auxiliaryArray, 0, array.length - 1, animations);\n  return animations;\n}\n\nfunction mergeSort(array,startIdx,endIdx,animations) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSort(array, startIdx, middleIdx, animations);\n  mergeSort(array, middleIdx + 1, endIdx, animations);\n  merge(animations, array, startIdx, endIdx);\n}\n\nfunction merge(animations, array, left, right){\n  if (left===right) return;\n  for (let i=left; i<right+1; i++) {\n    let indexOfMin = findMin(array, i, right);\n    // swaping the i with the current min\n    swap(array,i, indexOfMin);\n    // pushing animation\n    animations.push([indexOfMin,i]);\n  }\n  return array;\n}\n\n// function to find the min in a current array\nfunction findMin(array,left,right) {\n  let min = 600;\n  let indexOfMin = 0;\n  for (let i = left; i<right+1; i++) {\n    if (array[i] < min) {\n      min = array[i];\n      indexOfMin = i;\n    }\n  }\n  return indexOfMin;\n}\n"]},"metadata":{},"sourceType":"module"}