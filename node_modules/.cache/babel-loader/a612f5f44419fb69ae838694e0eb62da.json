{"ast":null,"code":"import { getQuickSortAnimation } from \"../Algorithms/quickSort\";\nimport { changeColor } from \"../Animations/HelperFunctions\";\nimport { swapBars } from \"../Animations/HelperFunctions\";\nimport { makeAllBarsGreen } from \"../Animations/HelperFunctions\";\nimport { getVelocity } from \"../Animations/HelperFunctions\";\nconst purple = \"#573B8C\";\nconst darkGreen = \"#027524\";\nexport async function quickSortAnimation(array, arrayBars, speed, buttons) {\n  let velocity = getVelocity(speed, 600, 205);\n  console.log(velocity);\n  const animations = getQuickSortAnimation(array);\n  var pivot = 0;\n  var currentChangeLeft = 0;\n  var currentChangeRight = 0;\n  changeColor(arrayBars, 0, arrayBars.length, \"grey\");\n\n  for (let i = 0; i < animations.length; i++) {\n    setTimeout(() => {\n      if (currentChangeLeft !== pivot) {\n        arrayBars[currentChangeLeft].style.backgroundColor = \"grey\";\n      }\n\n      arrayBars[currentChangeRight].style.backgroundColor = \"grey\";\n      var [oldPosition, newPosition] = animations[i];\n      var newBarStyle = arrayBars[newPosition].style; // it's the pivot\n\n      if (oldPosition === -1) {\n        var oldPivotStyle = arrayBars[pivot].style; // the old pivot turns\n\n        oldPivotStyle.backgroundColor = darkGreen;\n        newBarStyle.backgroundColor = purple;\n        pivot = newPosition;\n      } else {\n        var oldBarStyle = arrayBars[oldPosition].style;\n        swapBars(array, arrayBars, oldPosition, newPosition);\n        currentChangeLeft = newPosition;\n        currentChangeRight = oldPosition;\n\n        if (pivot === newPosition) {\n          oldBarStyle.backgroundColor = purple;\n        }\n      }\n\n      changeColor(arrayBars, pivot + 1, arrayBars.length, darkGreen);\n      makeAllBarsGreen(arrayBars, animations, i, buttons);\n    }, i * velocity);\n  }\n}","map":{"version":3,"sources":["/Users/saraspagnoletto/sort/src/Main/Animations/QuickSortAnimation.jsx"],"names":["getQuickSortAnimation","changeColor","swapBars","makeAllBarsGreen","getVelocity","purple","darkGreen","quickSortAnimation","array","arrayBars","speed","buttons","velocity","console","log","animations","pivot","currentChangeLeft","currentChangeRight","length","i","setTimeout","style","backgroundColor","oldPosition","newPosition","newBarStyle","oldPivotStyle","oldBarStyle"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,yBAAtC;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,WAAT,QAA4B,+BAA5B;AAEA,MAAMC,MAAM,GAAG,SAAf;AACA,MAAMC,SAAS,GAAG,SAAlB;AAGA,OAAO,eAAeC,kBAAf,CAAkCC,KAAlC,EAAwCC,SAAxC,EAAkDC,KAAlD,EAAwDC,OAAxD,EAAiE;AACtE,MAAIC,QAAQ,GAAGR,WAAW,CAACM,KAAD,EAAO,GAAP,EAAW,GAAX,CAA1B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMG,UAAU,GAAGf,qBAAqB,CAACQ,KAAD,CAAxC;AACA,MAAIQ,KAAK,GAAG,CAAZ;AACA,MAAIC,iBAAiB,GAAG,CAAxB;AACA,MAAIC,kBAAkB,GAAG,CAAzB;AAEAjB,EAAAA,WAAW,CAACQ,SAAD,EAAY,CAAZ,EAAeA,SAAS,CAACU,MAAzB,EAAiC,MAAjC,CAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAAU,CAACI,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;AAC1CC,IAAAA,UAAU,CAAC,MAAM;AACf,UAAIJ,iBAAiB,KAAGD,KAAxB,EAA+B;AAC7BP,QAAAA,SAAS,CAACQ,iBAAD,CAAT,CAA6BK,KAA7B,CAAmCC,eAAnC,GAAqD,MAArD;AACD;;AACDd,MAAAA,SAAS,CAACS,kBAAD,CAAT,CAA8BI,KAA9B,CAAoCC,eAApC,GAAsD,MAAtD;AACA,UAAI,CAACC,WAAD,EAAcC,WAAd,IAA6BV,UAAU,CAACK,CAAD,CAA3C;AACA,UAAIM,WAAW,GAAGjB,SAAS,CAACgB,WAAD,CAAT,CAAuBH,KAAzC,CANe,CAOf;;AACA,UAAIE,WAAW,KAAG,CAAC,CAAnB,EAAsB;AACpB,YAAIG,aAAa,GAAGlB,SAAS,CAACO,KAAD,CAAT,CAAiBM,KAArC,CADoB,CAEpB;;AACAK,QAAAA,aAAa,CAACJ,eAAd,GAAgCjB,SAAhC;AACAoB,QAAAA,WAAW,CAACH,eAAZ,GAA8BlB,MAA9B;AACAW,QAAAA,KAAK,GAAGS,WAAR;AACD,OAND,MAOK;AACH,YAAIG,WAAW,GAAGnB,SAAS,CAACe,WAAD,CAAT,CAAuBF,KAAzC;AAEApB,QAAAA,QAAQ,CAACM,KAAD,EAAOC,SAAP,EAAkBe,WAAlB,EAA+BC,WAA/B,CAAR;AACAR,QAAAA,iBAAiB,GAAGQ,WAApB;AACAP,QAAAA,kBAAkB,GAAGM,WAArB;;AACA,YAAIR,KAAK,KAAGS,WAAZ,EAAyB;AACvBG,UAAAA,WAAW,CAACL,eAAZ,GAA8BlB,MAA9B;AACD;AACF;;AACDJ,MAAAA,WAAW,CAACQ,SAAD,EAAYO,KAAK,GAAC,CAAlB,EAAqBP,SAAS,CAACU,MAA/B,EAAuCb,SAAvC,CAAX;AACAH,MAAAA,gBAAgB,CAACM,SAAD,EAAYM,UAAZ,EAAuBK,CAAvB,EAAyBT,OAAzB,CAAhB;AACD,KA3BS,EA2BRS,CAAC,GAAGR,QA3BI,CAAV;AA4BD;AACF","sourcesContent":["import { getQuickSortAnimation } from \"../Algorithms/quickSort\";\nimport { changeColor } from \"../Animations/HelperFunctions\";\nimport { swapBars } from \"../Animations/HelperFunctions\";\nimport { makeAllBarsGreen } from \"../Animations/HelperFunctions\";\nimport { getVelocity } from \"../Animations/HelperFunctions\";\n\nconst purple = \"#573B8C\";\nconst darkGreen = \"#027524\";\n\n\nexport async function quickSortAnimation(array,arrayBars,speed,buttons) {\n  let velocity = getVelocity(speed,600,205);\n  console.log(velocity);\n  const animations = getQuickSortAnimation(array);\n  var pivot = 0;\n  var currentChangeLeft = 0;\n  var currentChangeRight = 0;\n\n  changeColor(arrayBars, 0, arrayBars.length, \"grey\");\n  for (let i = 0; i < animations.length; i++) {\n    setTimeout(() => {\n      if (currentChangeLeft!==pivot) {\n        arrayBars[currentChangeLeft].style.backgroundColor = \"grey\";\n      }\n      arrayBars[currentChangeRight].style.backgroundColor = \"grey\";\n      var [oldPosition, newPosition] = animations[i];\n      var newBarStyle = arrayBars[newPosition].style;\n      // it's the pivot\n      if (oldPosition===-1) {\n        var oldPivotStyle = arrayBars[pivot].style;\n        // the old pivot turns\n        oldPivotStyle.backgroundColor = darkGreen;\n        newBarStyle.backgroundColor = purple;\n        pivot = newPosition;\n      }\n      else {\n        var oldBarStyle = arrayBars[oldPosition].style;\n\n        swapBars(array,arrayBars, oldPosition, newPosition);\n        currentChangeLeft = newPosition;\n        currentChangeRight = oldPosition;\n        if (pivot===newPosition) {\n          oldBarStyle.backgroundColor = purple;\n        }\n      }\n      changeColor(arrayBars, pivot+1, arrayBars.length, darkGreen);\n      makeAllBarsGreen(arrayBars, animations,i,buttons);\n    },i * velocity);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}