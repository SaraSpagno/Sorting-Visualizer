{"ast":null,"code":"import{swap}from\"../Algorithms/swap\";// getting the animation of bubble sort\nexport function getBubbleSortAnimation(array){var animations=[];var auxiliaryArray=array.slice();bubbleSort(animations,auxiliaryArray);return animations;}export function bubbleSort(animations,array){for(var i=0;i<array.length;i++){var len2=array.length-i;for(var j=0;j<len2;j++){if(array[j]>array[j+1]){swap(array,j,j+1);// adding the saw to the animation collection\nanimations.push([j,j+1]);}else if(j+1===len2-1){animations.push([j+1,j+1]);}}}return array;}","map":{"version":3,"sources":["/Users/saraspagnoletto/sort/src/Main/Algorithms/bubbleSort.js"],"names":["swap","getBubbleSortAnimation","array","animations","auxiliaryArray","slice","bubbleSort","i","length","len2","j","push"],"mappings":"AAAA,OAASA,IAAT,KAAqB,oBAArB,CAIA;AACA,MAAO,SAASC,CAAAA,sBAAT,CAAgCC,KAAhC,CAAuC,CAC5C,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CACA,GAAMC,CAAAA,cAAc,CAAGF,KAAK,CAACG,KAAN,EAAvB,CACAC,UAAU,CAACH,UAAD,CAAaC,cAAb,CAAV,CACA,MAAOD,CAAAA,UAAP,CACD,CAED,MAAO,SAASG,CAAAA,UAAT,CAAoBH,UAApB,CAAgCD,KAAhC,CAAuC,CAC5C,IAAK,GAAIK,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,KAAK,CAACM,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACrC,GAAIE,CAAAA,IAAI,CAAGP,KAAK,CAACM,MAAN,CAAaD,CAAxB,CACA,IAAK,GAAIG,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,IAApB,CAA0BC,CAAC,EAA3B,CAA+B,CAC7B,GAAIR,KAAK,CAACQ,CAAD,CAAL,CAAWR,KAAK,CAACQ,CAAC,CAAG,CAAL,CAApB,CAA6B,CAC3BV,IAAI,CAACE,KAAD,CAAQQ,CAAR,CAAWA,CAAC,CAAC,CAAb,CAAJ,CACA;AACAP,UAAU,CAACQ,IAAX,CAAgB,CAACD,CAAD,CAAIA,CAAC,CAAG,CAAR,CAAhB,EACD,CAJD,IAKK,IAAIA,CAAC,CAAC,CAAF,GAAMD,IAAI,CAAC,CAAf,CAAkB,CACrBN,UAAU,CAACQ,IAAX,CAAgB,CAACD,CAAC,CAAC,CAAH,CAAKA,CAAC,CAAC,CAAP,CAAhB,EACD,CACF,CACF,CACD,MAAOR,CAAAA,KAAP,CACD","sourcesContent":["import { swap } from \"../Algorithms/swap\";\n\n\n\n// getting the animation of bubble sort\nexport function getBubbleSortAnimation(array) {\n  const animations = [];\n  const auxiliaryArray = array.slice();\n  bubbleSort(animations, auxiliaryArray);\n  return animations;\n}\n\nexport function bubbleSort(animations, array) {\n  for (let i = 0; i < array.length; i++) {\n    let len2 = array.length-i;\n    for (let j = 0; j < len2; j++) {\n      if (array[j] > array[j + 1]) {\n        swap(array, j, j+1);\n        // adding the saw to the animation collection\n        animations.push([j, j + 1]);\n      }\n      else if (j+1===len2-1) {\n        animations.push([j+1,j+1]);\n      }\n    }\n  }\n  return array;\n}\n"]},"metadata":{},"sourceType":"module"}