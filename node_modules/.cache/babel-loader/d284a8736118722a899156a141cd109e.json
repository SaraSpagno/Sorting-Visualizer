{"ast":null,"code":"const SWAP_COLOR = \"#FDFD98\";\nconst darkGreen = \"#027524\";\nconst lightGreen = \"#77DD77\";\nlet audio = new Audio(\"/Users/saraspagnoletto/sort/src/Main/Toolbar/swap.mp3\");\nconst isRunning = {\n  value: false\n};\nexport default isRunning;\nexport function getVelocity(speed, max, min) {\n  var slope;\n  var coefficent;\n\n  if (speed >= 60) {\n    slope = (max - min) / 99;\n    coefficent = max - slope * 100;\n    return slope * speed + coefficent;\n  }\n\n  if (speed < 60) {\n    max -= 300;\n    slope = (max - min) / 99;\n    coefficent = max - slope * 100;\n    return slope * speed + coefficent;\n  }\n}\nexport function changeColor(arrayBars, start, end, color) {\n  for (let i = start; i < end; i++) {\n    var jBarStyle = arrayBars[i].style;\n    jBarStyle.backgroundColor = color;\n  }\n}\nexport function swapBars(array, arrayBars, oldPosition, newPosition) {\n  var oldBarStyle = arrayBars[oldPosition].style;\n  var newBarStyle = arrayBars[newPosition].style;\n  var temp = array[oldPosition];\n  array[oldPosition] = array[newPosition];\n  array[newPosition] = temp;\n  oldBarStyle.height = `${array[oldPosition]}vh`;\n  newBarStyle.height = `${array[newPosition]}vh`;\n  oldBarStyle.backgroundColor = SWAP_COLOR;\n  newBarStyle.backgroundColor = SWAP_COLOR;\n}\nexport function makeAllBarsGreen(arrayBars, animations, i, buttons) {\n  if (i === animations.length - 1) {\n    changeColor(arrayBars, 0, arrayBars.length, darkGreen);\n\n    for (let j = 0; j < arrayBars.length; j++) {\n      setTimeout(() => {\n        arrayBars[j].style.backgroundColor = lightGreen;\n\n        if (j === arrayBars.length - 1) {\n          audio.play();\n          isRunning.value = false;\n\n          for (let i = 0; i < 5; i++) {\n            buttons[i].classList.remove('buttons-disable');\n            buttons[i].classList.add('buttons');\n          }\n\n          for (let i = 5; i < 7; i++) {\n            buttons[i].classList.remove('slider-disable');\n            buttons[i].classList.add('slider');\n          }\n\n          buttons[7].classList.add('reset');\n          buttons[7].classList.remove('reset-disable');\n          buttons[8].classList.add('stop-disable');\n          buttons[8].classList.remove('stop');\n        }\n      }, j * 5);\n    }\n  }\n}","map":{"version":3,"sources":["/Users/saraspagnoletto/sort/src/Main/Animations/HelperFunctions.jsx"],"names":["SWAP_COLOR","darkGreen","lightGreen","audio","Audio","isRunning","value","getVelocity","speed","max","min","slope","coefficent","changeColor","arrayBars","start","end","color","i","jBarStyle","style","backgroundColor","swapBars","array","oldPosition","newPosition","oldBarStyle","newBarStyle","temp","height","makeAllBarsGreen","animations","buttons","length","j","setTimeout","play","classList","remove","add"],"mappings":"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","sourcesContent":["const SWAP_COLOR = \"#FDFD98\";\n\nconst darkGreen = \"#027524\";\nconst lightGreen = \"#77DD77\";\n\nlet audio = new Audio(\"/Users/saraspagnoletto/sort/src/Main/Toolbar/swap.mp3\");\n\n\nconst isRunning = {\n  value: false,\n};\n\n\nexport default isRunning;\n\nexport function getVelocity(speed, max, min) {\n  var slope;\n  var coefficent;\n  if (speed>=60) {\n    slope = (max-min)/(99);\n    coefficent = max - slope*100;\n    return slope*speed + coefficent;\n  }\n  if (speed<60) {\n    max-=300;\n    slope = (max-min)/(99);\n    coefficent = max - slope*100;\n    return slope*speed + coefficent;\n  }\n}\n\nexport function changeColor(arrayBars, start,end,color) {\n  for (let i = start; i < end; i++) {\n    var jBarStyle = arrayBars[i].style;\n    jBarStyle.backgroundColor = color;\n  }\n}\n\nexport function swapBars(array, arrayBars, oldPosition, newPosition) {\n  var oldBarStyle = arrayBars[oldPosition].style;\n  var newBarStyle = arrayBars[newPosition].style;\n\n  var temp = array[oldPosition];\n  array[oldPosition] = array[newPosition];\n  array[newPosition] = temp;\n\n  oldBarStyle.height = `${array[oldPosition]}vh`\n  newBarStyle.height = `${array[newPosition]}vh`;\n\n  oldBarStyle.backgroundColor = SWAP_COLOR;\n  newBarStyle.backgroundColor = SWAP_COLOR;\n}\n\nexport function makeAllBarsGreen(arrayBars, animations, i, buttons) {\n  if (i === (animations.length - 1)) {\n    changeColor(arrayBars, 0, arrayBars.length, darkGreen);\n    for (let j = 0; j < arrayBars.length; j++) {\n      setTimeout(() => {\n        arrayBars[j].style.backgroundColor = lightGreen;\n        if (j === arrayBars.length-1) {\n          audio.play();\n          isRunning.value = false;\n\n          for (let i=0; i<5; i++) {\n            buttons[i].classList.remove('buttons-disable');\n            buttons[i].classList.add('buttons');\n          }\n          for (let i=5; i<7; i++) {\n            buttons[i].classList.remove('slider-disable');\n            buttons[i].classList.add('slider');\n          }\n          buttons[7].classList.add('reset');\n          buttons[7].classList.remove('reset-disable');\n          buttons[8].classList.add('stop-disable');\n          buttons[8].classList.remove('stop');\n        }\n      }, j*5);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}