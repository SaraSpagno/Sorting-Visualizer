{"ast":null,"code":"import { getSelectionSortAnimation } from \"../Algorithms/selectionSort\";\nimport { changeColor } from \"../Animations/HelperFunctions\";\nimport { swapBars } from \"../Animations/HelperFunctions\";\nimport { makeAllBarsGreen } from \"../Animations/HelperFunctions\";\nimport { getVelocity } from \"../Animations/HelperFunctions\";\nconst yellow = \"#FDFD98\";\nconst purple = \"#573B8C\";\nconst darkGreen = \"#027524\";\nexport async function selectionSortAnimation(array, arrayBars, speed, buttons) {\n  let velocity = getVelocity(speed, 400, 0.2);\n  const animations = getSelectionSortAnimation(array);\n  var currentChangeRight = 0;\n  var index = 0;\n  var min = 0;\n  changeColor(arrayBars, 0, arrayBars.length, \"grey\");\n\n  for (let i = 0; i < animations.length; i++) {\n    setTimeout(() => {\n      arrayBars[currentChangeRight].style.backgroundColor = \"grey\";\n      var [oldPosition, newPosition] = animations[i];\n      var newBarStyle = arrayBars[newPosition].style;\n\n      if (oldPosition === -2) {\n        currentChangeRight = newPosition;\n        newBarStyle.backgroundColor = yellow;\n      } else if (oldPosition === -1) {\n        arrayBars[min].style.backgroundColor = \"grey\";\n        min = newPosition;\n        newBarStyle.backgroundColor = purple;\n      } else {\n        swapBars(array, arrayBars, oldPosition, newPosition);\n        newBarStyle.backgroundColor = \"grey\";\n        index++;\n      }\n\n      changeColor(arrayBars, 0, index, darkGreen);\n      makeAllBarsGreen(arrayBars, animations, i, buttons);\n    }, i * velocity);\n  }\n}","map":{"version":3,"sources":["/Users/saraspagnoletto/sort/src/Main/Animations/SelectionSortAnimation.jsx"],"names":["getSelectionSortAnimation","changeColor","swapBars","makeAllBarsGreen","getVelocity","yellow","purple","darkGreen","selectionSortAnimation","array","arrayBars","speed","buttons","velocity","animations","currentChangeRight","index","min","length","i","setTimeout","style","backgroundColor","oldPosition","newPosition","newBarStyle"],"mappings":"AAAA,SAASA,yBAAT,QAA0C,6BAA1C;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,WAAT,QAA4B,+BAA5B;AAGA,MAAMC,MAAM,GAAG,SAAf;AACA,MAAMC,MAAM,GAAG,SAAf;AACA,MAAMC,SAAS,GAAG,SAAlB;AAKA,OAAO,eAAeC,sBAAf,CAAsCC,KAAtC,EAA4CC,SAA5C,EAAsDC,KAAtD,EAA4DC,OAA5D,EAAqE;AAC1E,MAAIC,QAAQ,GAAGT,WAAW,CAACO,KAAD,EAAO,GAAP,EAAW,GAAX,CAA1B;AAEA,QAAMG,UAAU,GAAGd,yBAAyB,CAACS,KAAD,CAA5C;AACA,MAAIM,kBAAkB,GAAG,CAAzB;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,GAAG,GAAG,CAAV;AACAhB,EAAAA,WAAW,CAACS,SAAD,EAAY,CAAZ,EAAeA,SAAS,CAACQ,MAAzB,EAAiC,MAAjC,CAAX;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAAU,CAACI,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;AAC1CC,IAAAA,UAAU,CAAC,MAAM;AACfV,MAAAA,SAAS,CAACK,kBAAD,CAAT,CAA8BM,KAA9B,CAAoCC,eAApC,GAAsD,MAAtD;AACA,UAAI,CAACC,WAAD,EAAcC,WAAd,IAA6BV,UAAU,CAACK,CAAD,CAA3C;AACA,UAAIM,WAAW,GAAGf,SAAS,CAACc,WAAD,CAAT,CAAuBH,KAAzC;;AACA,UAAIE,WAAW,KAAK,CAAC,CAArB,EAAwB;AACtBR,QAAAA,kBAAkB,GAAGS,WAArB;AACAC,QAAAA,WAAW,CAACH,eAAZ,GAA8BjB,MAA9B;AACD,OAHD,MAIK,IAAIkB,WAAW,KAAK,CAAC,CAArB,EAAwB;AAC3Bb,QAAAA,SAAS,CAACO,GAAD,CAAT,CAAeI,KAAf,CAAqBC,eAArB,GAAuC,MAAvC;AACAL,QAAAA,GAAG,GAAGO,WAAN;AACAC,QAAAA,WAAW,CAACH,eAAZ,GAA8BhB,MAA9B;AACD,OAJI,MAKA;AACHJ,QAAAA,QAAQ,CAACO,KAAD,EAAOC,SAAP,EAAkBa,WAAlB,EAA+BC,WAA/B,CAAR;AACAC,QAAAA,WAAW,CAACH,eAAZ,GAA8B,MAA9B;AACAN,QAAAA,KAAK;AACN;;AACDf,MAAAA,WAAW,CAACS,SAAD,EAAY,CAAZ,EAAeM,KAAf,EAAsBT,SAAtB,CAAX;AACAJ,MAAAA,gBAAgB,CAACO,SAAD,EAAYI,UAAZ,EAAuBK,CAAvB,EAAyBP,OAAzB,CAAhB;AACD,KApBS,EAoBPO,CAAC,GAACN,QApBK,CAAV;AAqBD;AACF","sourcesContent":["import { getSelectionSortAnimation } from \"../Algorithms/selectionSort\";\nimport { changeColor } from \"../Animations/HelperFunctions\";\nimport { swapBars } from \"../Animations/HelperFunctions\";\nimport { makeAllBarsGreen } from \"../Animations/HelperFunctions\";\nimport { getVelocity } from \"../Animations/HelperFunctions\";\n\n\nconst yellow = \"#FDFD98\";\nconst purple = \"#573B8C\";\nconst darkGreen = \"#027524\";\n\n\n\n\nexport async function selectionSortAnimation(array,arrayBars,speed,buttons) {\n  let velocity = getVelocity(speed,400,0.2);\n\n  const animations = getSelectionSortAnimation(array);\n  var currentChangeRight = 0;\n  var index = 0;\n  var min = 0;\n  changeColor(arrayBars, 0, arrayBars.length, \"grey\");\n\n  for (let i = 0; i < animations.length; i++) {\n    setTimeout(() => {\n      arrayBars[currentChangeRight].style.backgroundColor = \"grey\";\n      var [oldPosition, newPosition] = animations[i];\n      var newBarStyle = arrayBars[newPosition].style;\n      if (oldPosition === -2) {\n        currentChangeRight = newPosition;\n        newBarStyle.backgroundColor = yellow;\n      }\n      else if (oldPosition === -1) {\n        arrayBars[min].style.backgroundColor = \"grey\";\n        min = newPosition;\n        newBarStyle.backgroundColor = purple;\n      }\n      else {\n        swapBars(array,arrayBars, oldPosition, newPosition);\n        newBarStyle.backgroundColor = \"grey\";\n        index++;\n      }\n      changeColor(arrayBars, 0, index, darkGreen);\n      makeAllBarsGreen(arrayBars, animations,i,buttons);\n    }, i*velocity);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}