{"ast":null,"code":"import _regeneratorRuntime from\"/Users/saraspagnoletto/sort/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/saraspagnoletto/sort/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/saraspagnoletto/sort/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{getMergeSortAnimation}from\"../Algorithms/mergeSort\";import{changeColor}from\"../Animations/HelperFunctions\";import{swapBars}from\"../Animations/HelperFunctions\";import{makeAllBarsGreen}from\"../Animations/HelperFunctions\";import{getVelocity}from\"../Animations/HelperFunctions\";var darkGreen=\"#027524\";export function mergeSortAnimation(_x,_x2,_x3,_x4){return _mergeSortAnimation.apply(this,arguments);}function _mergeSortAnimation(){_mergeSortAnimation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(array,arrayBars,speed,buttons){var velocity,animations,currentChangeLeft,currentChangeRight,_loop,i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:velocity=getVelocity(speed,450,2);animations=getMergeSortAnimation(array);currentChangeLeft=0;currentChangeRight=0;changeColor(arrayBars,0,arrayBars.length,\"grey\");_loop=function _loop(i){setTimeout(function(){arrayBars[currentChangeLeft].style.backgroundColor=darkGreen;arrayBars[currentChangeRight].style.backgroundColor=darkGreen;var _animations$i=_slicedToArray(animations[i],2),oldPosition=_animations$i[0],newPosition=_animations$i[1];swapBars(array,arrayBars,oldPosition,newPosition);currentChangeLeft=newPosition;currentChangeRight=oldPosition;makeAllBarsGreen(arrayBars,animations,i,buttons);},i*velocity);};for(i=0;i<animations.length;i++){_loop(i);}case 7:case\"end\":return _context.stop();}}},_callee);}));return _mergeSortAnimation.apply(this,arguments);}","map":{"version":3,"sources":["/Users/saraspagnoletto/sort/src/Main/Animations/MergeSortAnimation.jsx"],"names":["getMergeSortAnimation","changeColor","swapBars","makeAllBarsGreen","getVelocity","darkGreen","mergeSortAnimation","array","arrayBars","speed","buttons","velocity","animations","currentChangeLeft","currentChangeRight","length","i","setTimeout","style","backgroundColor","oldPosition","newPosition"],"mappings":"mbAAA,OAASA,qBAAT,KAAsC,yBAAtC,CACA,OAASC,WAAT,KAA4B,+BAA5B,CACA,OAASC,QAAT,KAAyB,+BAAzB,CACA,OAASC,gBAAT,KAAiC,+BAAjC,CACA,OAASC,WAAT,KAA4B,+BAA5B,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CAGA,eAAsBC,CAAAA,kBAAtB,mE,2GAAO,iBAAkCC,KAAlC,CAAwCC,SAAxC,CAAkDC,KAAlD,CAAwDC,OAAxD,uLACDC,QADC,CACUP,WAAW,CAACK,KAAD,CAAO,GAAP,CAAW,CAAX,CADrB,CAECG,UAFD,CAEcZ,qBAAqB,CAACO,KAAD,CAFnC,CAIDM,iBAJC,CAImB,CAJnB,CAKDC,kBALC,CAKoB,CALpB,CAMLb,WAAW,CAACO,SAAD,CAAY,CAAZ,CAAeA,SAAS,CAACO,MAAzB,CAAiC,MAAjC,CAAX,CANK,qBAQIC,CARJ,EASHC,UAAU,CAAC,UAAM,CACfT,SAAS,CAACK,iBAAD,CAAT,CAA6BK,KAA7B,CAAmCC,eAAnC,CAAqDd,SAArD,CACAG,SAAS,CAACM,kBAAD,CAAT,CAA8BI,KAA9B,CAAoCC,eAApC,CAAsDd,SAAtD,CAFe,iCAGkBO,UAAU,CAACI,CAAD,CAH5B,IAGVI,WAHU,kBAGGC,WAHH,kBAIfnB,QAAQ,CAACK,KAAD,CAAQC,SAAR,CAAmBY,WAAnB,CAAgCC,WAAhC,CAAR,CACAR,iBAAiB,CAAGQ,WAApB,CACAP,kBAAkB,CAAGM,WAArB,CACAjB,gBAAgB,CAACK,SAAD,CAAWI,UAAX,CAAsBI,CAAtB,CAAwBN,OAAxB,CAAhB,CACD,CARS,CAQPM,CAAC,CAACL,QARK,CAAV,CATG,EAQL,IAASK,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGJ,UAAU,CAACG,MAA/B,CAAuCC,CAAC,EAAxC,CAA4C,OAAnCA,CAAmC,EAU3C,CAlBI,sD","sourcesContent":["import { getMergeSortAnimation } from \"../Algorithms/mergeSort\";\nimport { changeColor } from \"../Animations/HelperFunctions\";\nimport { swapBars } from \"../Animations/HelperFunctions\";\nimport { makeAllBarsGreen } from \"../Animations/HelperFunctions\";\nimport { getVelocity } from \"../Animations/HelperFunctions\";\n\n\nconst darkGreen = \"#027524\";\n\n\nexport async function mergeSortAnimation(array,arrayBars,speed,buttons) {\n  let velocity = getVelocity(speed,450,2);\n  const animations = getMergeSortAnimation(array);\n\n  var currentChangeLeft = 0;\n  var currentChangeRight = 0;\n  changeColor(arrayBars, 0, arrayBars.length, \"grey\");\n\n  for (let i = 0; i < animations.length; i++) {\n    setTimeout(() => {\n      arrayBars[currentChangeLeft].style.backgroundColor = darkGreen;\n      arrayBars[currentChangeRight].style.backgroundColor = darkGreen;\n      var [oldPosition, newPosition] = animations[i];\n      swapBars(array, arrayBars, oldPosition, newPosition);\n      currentChangeLeft = newPosition;\n      currentChangeRight = oldPosition;\n      makeAllBarsGreen(arrayBars,animations,i,buttons);\n    }, i*velocity);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}