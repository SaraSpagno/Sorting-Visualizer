{"ast":null,"code":"import _regeneratorRuntime from\"/Users/saraspagnoletto/sort/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/saraspagnoletto/sort/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/saraspagnoletto/sort/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{getSelectionSortAnimation}from\"../Algorithms/selectionSort\";import{changeColor}from\"../Animations/HelperFunctions\";import{swapBars}from\"../Animations/HelperFunctions\";import{makeAllBarsGreen}from\"../Animations/HelperFunctions\";import{getVelocity}from\"../Animations/HelperFunctions\";var yellow=\"#FDFD98\";var purple=\"#573B8C\";var darkGreen=\"#027524\";export function selectionSortAnimation(_x,_x2,_x3,_x4){return _selectionSortAnimation.apply(this,arguments);}function _selectionSortAnimation(){_selectionSortAnimation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(array,arrayBars,speed,buttons){var velocity,animations,currentChangeRight,index,min,_loop,i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:velocity=getVelocity(speed,400,0.2);animations=getSelectionSortAnimation(array);currentChangeRight=0;index=0;min=0;changeColor(arrayBars,0,arrayBars.length,\"grey\");_loop=function _loop(i){setTimeout(function(){arrayBars[currentChangeRight].style.backgroundColor=\"grey\";var _animations$i=_slicedToArray(animations[i],2),oldPosition=_animations$i[0],newPosition=_animations$i[1];var newBarStyle=arrayBars[newPosition].style;if(oldPosition===-2){currentChangeRight=newPosition;newBarStyle.backgroundColor=yellow;}else if(oldPosition===-1){arrayBars[min].style.backgroundColor=\"grey\";min=newPosition;newBarStyle.backgroundColor=purple;}else{swapBars(array,arrayBars,oldPosition,newPosition);newBarStyle.backgroundColor=\"grey\";index++;}changeColor(arrayBars,0,index,darkGreen);makeAllBarsGreen(arrayBars,animations,i,buttons);},i*velocity);};for(i=0;i<animations.length;i++){_loop(i);}case 8:case\"end\":return _context.stop();}}},_callee);}));return _selectionSortAnimation.apply(this,arguments);}","map":{"version":3,"sources":["/Users/saraspagnoletto/sort/src/Main/Animations/SelectionSortAnimation.jsx"],"names":["getSelectionSortAnimation","changeColor","swapBars","makeAllBarsGreen","getVelocity","yellow","purple","darkGreen","selectionSortAnimation","array","arrayBars","speed","buttons","velocity","animations","currentChangeRight","index","min","length","i","setTimeout","style","backgroundColor","oldPosition","newPosition","newBarStyle"],"mappings":"mbAAA,OAASA,yBAAT,KAA0C,6BAA1C,CACA,OAASC,WAAT,KAA4B,+BAA5B,CACA,OAASC,QAAT,KAAyB,+BAAzB,CACA,OAASC,gBAAT,KAAiC,+BAAjC,CACA,OAASC,WAAT,KAA4B,+BAA5B,CAGA,GAAMC,CAAAA,MAAM,CAAG,SAAf,CACA,GAAMC,CAAAA,MAAM,CAAG,SAAf,CACA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CAKA,eAAsBC,CAAAA,sBAAtB,uE,mHAAO,iBAAsCC,KAAtC,CAA4CC,SAA5C,CAAsDC,KAAtD,CAA4DC,OAA5D,+KACDC,QADC,CACUT,WAAW,CAACO,KAAD,CAAO,GAAP,CAAW,GAAX,CADrB,CAGCG,UAHD,CAGcd,yBAAyB,CAACS,KAAD,CAHvC,CAIDM,kBAJC,CAIoB,CAJpB,CAKDC,KALC,CAKO,CALP,CAMDC,GANC,CAMK,CANL,CAOLhB,WAAW,CAACS,SAAD,CAAY,CAAZ,CAAeA,SAAS,CAACQ,MAAzB,CAAiC,MAAjC,CAAX,CAPK,qBASIC,CATJ,EAUHC,UAAU,CAAC,UAAM,CACfV,SAAS,CAACK,kBAAD,CAAT,CAA8BM,KAA9B,CAAoCC,eAApC,CAAsD,MAAtD,CADe,iCAEkBR,UAAU,CAACK,CAAD,CAF5B,IAEVI,WAFU,kBAEGC,WAFH,kBAGf,GAAIC,CAAAA,WAAW,CAAGf,SAAS,CAACc,WAAD,CAAT,CAAuBH,KAAzC,CACA,GAAIE,WAAW,GAAK,CAAC,CAArB,CAAwB,CACtBR,kBAAkB,CAAGS,WAArB,CACAC,WAAW,CAACH,eAAZ,CAA8BjB,MAA9B,CACD,CAHD,IAIK,IAAIkB,WAAW,GAAK,CAAC,CAArB,CAAwB,CAC3Bb,SAAS,CAACO,GAAD,CAAT,CAAeI,KAAf,CAAqBC,eAArB,CAAuC,MAAvC,CACAL,GAAG,CAAGO,WAAN,CACAC,WAAW,CAACH,eAAZ,CAA8BhB,MAA9B,CACD,CAJI,IAKA,CACHJ,QAAQ,CAACO,KAAD,CAAOC,SAAP,CAAkBa,WAAlB,CAA+BC,WAA/B,CAAR,CACAC,WAAW,CAACH,eAAZ,CAA8B,MAA9B,CACAN,KAAK,GACN,CACDf,WAAW,CAACS,SAAD,CAAY,CAAZ,CAAeM,KAAf,CAAsBT,SAAtB,CAAX,CACAJ,gBAAgB,CAACO,SAAD,CAAYI,UAAZ,CAAuBK,CAAvB,CAAyBP,OAAzB,CAAhB,CACD,CApBS,CAoBPO,CAAC,CAACN,QApBK,CAAV,CAVG,EASL,IAASM,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGL,UAAU,CAACI,MAA/B,CAAuCC,CAAC,EAAxC,CAA4C,OAAnCA,CAAmC,EAsB3C,CA/BI,sD","sourcesContent":["import { getSelectionSortAnimation } from \"../Algorithms/selectionSort\";\nimport { changeColor } from \"../Animations/HelperFunctions\";\nimport { swapBars } from \"../Animations/HelperFunctions\";\nimport { makeAllBarsGreen } from \"../Animations/HelperFunctions\";\nimport { getVelocity } from \"../Animations/HelperFunctions\";\n\n\nconst yellow = \"#FDFD98\";\nconst purple = \"#573B8C\";\nconst darkGreen = \"#027524\";\n\n\n\n\nexport async function selectionSortAnimation(array,arrayBars,speed,buttons) {\n  let velocity = getVelocity(speed,400,0.2);\n\n  const animations = getSelectionSortAnimation(array);\n  var currentChangeRight = 0;\n  var index = 0;\n  var min = 0;\n  changeColor(arrayBars, 0, arrayBars.length, \"grey\");\n\n  for (let i = 0; i < animations.length; i++) {\n    setTimeout(() => {\n      arrayBars[currentChangeRight].style.backgroundColor = \"grey\";\n      var [oldPosition, newPosition] = animations[i];\n      var newBarStyle = arrayBars[newPosition].style;\n      if (oldPosition === -2) {\n        currentChangeRight = newPosition;\n        newBarStyle.backgroundColor = yellow;\n      }\n      else if (oldPosition === -1) {\n        arrayBars[min].style.backgroundColor = \"grey\";\n        min = newPosition;\n        newBarStyle.backgroundColor = purple;\n      }\n      else {\n        swapBars(array,arrayBars, oldPosition, newPosition);\n        newBarStyle.backgroundColor = \"grey\";\n        index++;\n      }\n      changeColor(arrayBars, 0, index, darkGreen);\n      makeAllBarsGreen(arrayBars, animations,i,buttons);\n    }, i*velocity);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}