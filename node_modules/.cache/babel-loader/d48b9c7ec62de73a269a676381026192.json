{"ast":null,"code":"import _regeneratorRuntime from\"/Users/saraspagnoletto/sort/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/saraspagnoletto/sort/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/saraspagnoletto/sort/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{getInsertionSortAnimation}from\"../Algorithms/insertionSort\";import{changeColor}from\"../Animations/HelperFunctions\";import{swapBars}from\"../Animations/HelperFunctions\";import{makeAllBarsGreen}from\"../Animations/HelperFunctions\";import{getVelocity}from\"../Animations/HelperFunctions\";var darkGreen=\"#027524\";export function insertionSortAnimation(_x,_x2,_x3,_x4){return _insertionSortAnimation.apply(this,arguments);}function _insertionSortAnimation(){_insertionSortAnimation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(array,arrayBars,speed,buttons){var velocity,animations,currentChangeRight,_loop,i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:velocity=getVelocity(speed,400,0.2);console.log(velocity);animations=getInsertionSortAnimation(array);currentChangeRight=0;changeColor(arrayBars,0,arrayBars.length,\"grey\");_loop=function _loop(i){setTimeout(function(){arrayBars[currentChangeRight].style.backgroundColor=darkGreen;var _animations$i=_slicedToArray(animations[i],2),oldPosition=_animations$i[0],newPosition=_animations$i[1];swapBars(array,arrayBars,oldPosition,newPosition);arrayBars[newPosition].style.backgroundColor=darkGreen;currentChangeRight=oldPosition;changeColor(arrayBars,0,oldPosition,darkGreen);makeAllBarsGreen(arrayBars,animations,i,buttons);},i*velocity);};for(i=0;i<animations.length;i++){_loop(i);}case 7:case\"end\":return _context.stop();}}},_callee);}));return _insertionSortAnimation.apply(this,arguments);}","map":{"version":3,"sources":["/Users/saraspagnoletto/sort/src/Main/Animations/InsertionSortAnimation.jsx"],"names":["getInsertionSortAnimation","changeColor","swapBars","makeAllBarsGreen","getVelocity","darkGreen","insertionSortAnimation","array","arrayBars","speed","buttons","velocity","console","log","animations","currentChangeRight","length","i","setTimeout","style","backgroundColor","oldPosition","newPosition"],"mappings":"mbAAA,OAASA,yBAAT,KAA0C,6BAA1C,CACA,OAASC,WAAT,KAA4B,+BAA5B,CACA,OAASC,QAAT,KAAyB,+BAAzB,CACA,OAASC,gBAAT,KAAiC,+BAAjC,CACA,OAASC,WAAT,KAA4B,+BAA5B,CAEA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CAKA,eAAsBC,CAAAA,sBAAtB,uE,mHAAO,iBAAsCC,KAAtC,CAA4CC,SAA5C,CAAsDC,KAAtD,CAA4DC,OAA5D,qKACDC,QADC,CACUP,WAAW,CAACK,KAAD,CAAO,GAAP,CAAW,GAAX,CADrB,CAELG,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACMG,UAHD,CAGcd,yBAAyB,CAACO,KAAD,CAHvC,CAMDQ,kBANC,CAMoB,CANpB,CAOLd,WAAW,CAACO,SAAD,CAAY,CAAZ,CAAeA,SAAS,CAACQ,MAAzB,CAAiC,MAAjC,CAAX,CAPK,qBASIC,CATJ,EAUHC,UAAU,CAAC,UAAM,CACfV,SAAS,CAACO,kBAAD,CAAT,CAA8BI,KAA9B,CAAoCC,eAApC,CAAsDf,SAAtD,CADe,iCAEkBS,UAAU,CAACG,CAAD,CAF5B,IAEVI,WAFU,kBAEGC,WAFH,kBAGfpB,QAAQ,CAACK,KAAD,CAAOC,SAAP,CAAkBa,WAAlB,CAA+BC,WAA/B,CAAR,CACAd,SAAS,CAACc,WAAD,CAAT,CAAuBH,KAAvB,CAA6BC,eAA7B,CAA+Cf,SAA/C,CACAU,kBAAkB,CAAGM,WAArB,CACApB,WAAW,CAACO,SAAD,CAAY,CAAZ,CAAea,WAAf,CAA4BhB,SAA5B,CAAX,CACAF,gBAAgB,CAACK,SAAD,CAAYM,UAAZ,CAAuBG,CAAvB,CAAyBP,OAAzB,CAAhB,CACD,CARS,CAQPO,CAAC,CAACN,QARK,CAAV,CAVG,EASL,IAASM,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGH,UAAU,CAACE,MAA/B,CAAuCC,CAAC,EAAxC,CAA4C,OAAnCA,CAAmC,EAU3C,CAnBI,sD","sourcesContent":["import { getInsertionSortAnimation } from \"../Algorithms/insertionSort\";\nimport { changeColor } from \"../Animations/HelperFunctions\";\nimport { swapBars } from \"../Animations/HelperFunctions\";\nimport { makeAllBarsGreen } from \"../Animations/HelperFunctions\";\nimport { getVelocity } from \"../Animations/HelperFunctions\";\n\nconst darkGreen = \"#027524\";\n\n\n\n\nexport async function insertionSortAnimation(array,arrayBars,speed,buttons) {\n  let velocity = getVelocity(speed,400,0.2);\n  console.log(velocity);\n  const animations = getInsertionSortAnimation(array);\n\n\n  var currentChangeRight = 0;\n  changeColor(arrayBars, 0, arrayBars.length, \"grey\");\n\n  for (let i = 0; i < animations.length; i++) {\n    setTimeout(() => {\n      arrayBars[currentChangeRight].style.backgroundColor = darkGreen;\n      var [oldPosition, newPosition] = animations[i];\n      swapBars(array,arrayBars, oldPosition, newPosition);\n      arrayBars[newPosition].style.backgroundColor = darkGreen;\n      currentChangeRight = oldPosition;\n      changeColor(arrayBars, 0, oldPosition, darkGreen);\n      makeAllBarsGreen(arrayBars, animations,i,buttons);\n    }, i*velocity);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}